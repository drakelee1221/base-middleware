package ${pkgPrefix}.pm.controller.${module};

import ${pkgPrefix}.common.domain.${module}.${className};
import ${pkgPrefix}.common.dto.page.DataPage;
import ${pkgPrefix}.common.token.RequireToken;
import ${pkgPrefix}.pm.service.${module}.${className}Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.Map;

/**
 * ${className} Controller
 * @author : code generator
 * @version : 1.0
 * @since : ${date}
 */
@RestController
@RequestMapping("api")
public class ${className}Controller {

  @Autowired
  private ${className}Service ${classVar}Service;

  /**
   * @param params -
   * <p> pageNum        - NotNull   - Int - 当前页
   * <p> pageSize       - NotNull   - Int - 每页记录数
   * <p> id             - Nullable  - Str - id
   *
   * @return
   */
  @RequireToken
  @GetMapping(value = "/${classVar}/page", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
  public ResponseEntity page(@RequestParam Map<String, String> params) {
    return new ResponseEntity(DataPage.from(${classVar}Service.page(params)), HttpStatus.OK);
  }

  /**
   * @param id
   *
   * @return
   */
  @RequireToken
  @GetMapping(value = "/${classVar}/{id}", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
  public ResponseEntity page(@PathVariable String id) {
    return new ResponseEntity(${classVar}Service.findById(id), HttpStatus.OK);
  }

  /**
   * @param ${classVar}
   *
   * @return
   */
  @RequireToken
  @PostMapping(value = "/${classVar}/save", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
  public ResponseEntity save${className}(@RequestBody TDemo ${classVar}) {
    return new ResponseEntity(${classVar}Service.saveOrUpdate(tDemo), HttpStatus.CREATED);
  }

  /**
   * @param ${classVar}
   *
   * @return
   */
  @RequireToken
  @PutMapping(value = "/${classVar}/update", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
  public ResponseEntity update${className}(@RequestBody TDemo ${classVar}) {
    return new ResponseEntity(${classVar}Service.saveOrUpdate(tDemo), HttpStatus.OK);
  }

  /**
   * @param ids
   *
   * @return
   */
  @RequireToken
  @DeleteMapping(value = "/${classVar}/delete/{ids}", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
  public ResponseEntity delete${className}(@PathVariable String ids) {
    String[] idsList = ids.split(",");
    ${classVar}Service.delete(idsList);
    return new ResponseEntity(HttpStatus.OK);
  }


}
